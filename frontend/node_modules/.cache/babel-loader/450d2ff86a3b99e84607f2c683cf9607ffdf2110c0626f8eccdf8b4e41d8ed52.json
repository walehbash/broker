{"ast":null,"code":"var _jsxFileName = \"/workspace/frontend/src/contexts/SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocket = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const {\n    user,\n    updateBalance\n  } = useAuth();\n  useEffect(() => {\n    if (user) {\n      const newSocket = io('http://localhost:5000', {\n        transports: ['websocket'],\n        autoConnect: true\n      });\n      newSocket.on('connect', () => {\n        console.log('Connected to server');\n        setConnected(true);\n        // Join user-specific room for real-time updates\n        newSocket.emit('join-user-room', user.id);\n      });\n      newSocket.on('disconnect', () => {\n        console.log('Disconnected from server');\n        setConnected(false);\n      });\n\n      // Listen for balance updates\n      newSocket.on('balance-update', data => {\n        console.log('Received balance update:', data);\n        updateBalance(data.balance, data.transaction || data.interestEarned ? {\n          amount: data.interestEarned,\n          type: 'interest'\n        } : null);\n      });\n      newSocket.on('connect_error', error => {\n        console.error('Socket connection error:', error);\n        setConnected(false);\n      });\n      setSocket(newSocket);\n      return () => {\n        newSocket.disconnect();\n        setSocket(null);\n        setConnected(false);\n      };\n    }\n  }, [user, updateBalance]);\n  const value = {\n    socket,\n    connected\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"eXMd95MnFnfAorHDkTCMu4wbUI0=\", false, function () {\n  return [useAuth];\n});\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useAuth","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","context","Error","SocketProvider","children","_s2","socket","setSocket","connected","setConnected","user","updateBalance","newSocket","transports","autoConnect","on","console","log","emit","id","data","balance","transaction","interestEarned","amount","type","error","disconnect","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspace/frontend/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\n\nconst SocketContext = createContext();\n\nexport const useSocket = () => {\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n\nexport const SocketProvider = ({ children }) => {\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const { user, updateBalance } = useAuth();\n\n  useEffect(() => {\n    if (user) {\n      const newSocket = io('http://localhost:5000', {\n        transports: ['websocket'],\n        autoConnect: true,\n      });\n\n      newSocket.on('connect', () => {\n        console.log('Connected to server');\n        setConnected(true);\n        // Join user-specific room for real-time updates\n        newSocket.emit('join-user-room', user.id);\n      });\n\n      newSocket.on('disconnect', () => {\n        console.log('Disconnected from server');\n        setConnected(false);\n      });\n\n      // Listen for balance updates\n      newSocket.on('balance-update', (data) => {\n        console.log('Received balance update:', data);\n        updateBalance(data.balance, data.transaction || data.interestEarned ? {\n          amount: data.interestEarned,\n          type: 'interest'\n        } : null);\n      });\n\n      newSocket.on('connect_error', (error) => {\n        console.error('Socket connection error:', error);\n        setConnected(false);\n      });\n\n      setSocket(newSocket);\n\n      return () => {\n        newSocket.disconnect();\n        setSocket(null);\n        setConnected(false);\n      };\n    }\n  }, [user, updateBalance]);\n\n  const value = {\n    socket,\n    connected\n  };\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}